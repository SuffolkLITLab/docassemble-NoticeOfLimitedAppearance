include:
  - docassemble.MAVirtualCourt:basic-questions.yml
  - signer.yml
  - sign_on_device.yml
---
comment: |
  Predefine some variables we need
code: |
  allowed_courts = [    
      "Boston Municipal Court",
      "District Court",
      "Housing Court",
      "Land Court",
      "Probate and Family Court",
      "Superior Court",
       ] 
  preferred_court = [    
      "Boston Municipal Court",
      "District Court",
      "Housing Court",
      "Land Court",
      "Probate and Family Court",
      "Superior Court",
       ] 
  interview_presets = True
---  
code: |       
  #final_form_to_file = notice_of_limited_appearance
  #form_to_file_no_cover = notice_of_limited_appearance
  final_form = notice_of_limited_appearance
---
objects:  
  - clients: PeopleList.using(auto_gather=False, complete_attribute='complete')
---
id: interview order
mandatory: True
code: |
  form_approved_for_email_filing = False
  interview_presets
  basic_questions_intro_screen
  agrees_to_certify
  ask_court_question
  docket_numbers
  users[0].name.first
  plaintiff_name
  defendant_name
  represented_party
  clients.gather()
  user_needs_interpreter
  if not need_motion:
    set_empty_motion_details
  if not need_hearing:
    set_empty_hearing_details
  if not need_adr:
    set_empty_adr_details
  if not need_other_court_event:
    set_empty_other_court_event_details
  if not need_trial:
    set_empty_trial_details
  if not need_others:
    set_empty_others_details
  firm_agency_name
  bbo_number
  users[0].address.address
  users[0].address.unit
  users[0].address.city
  users[0].address.state
  users[0].address.zip
  users[0].mobile_number
  users[0].phone_number
  users[0].fax
  users[0].email
  
  preview_screen
  attorney_signature_date
  collect_signer_types
  users[0].sign_on_device
---
# Cosigner functionality triggers this
event: x.after_other_signers_signatures_sought
generic object: Individual
code: |
  download
---
# Triggered by user following the link in a notification
# about other signer's behavior. `action` allows check for authorization.
event: check_status
code: |
  if action_argument('party_id') == users[0].id:
    users[0].status
  else:
    unauthorized
---
id: 404
event: unauthorized
code: |
  response('Page not found', response_code=404)
---
code: |
  interview_short_title = "File a Notice of Limited Appearance"
---
code: |
  # When the saved redis data will expire: days * hours * minutes * seconds
  # https://docassemble.org/docs/objects.html#DARedis
  remote_siganure_expiration_ms = 1 * 6 * 60 * 60  # 6hrs
---
id: attorney certification
question: |
  Attorney Certification
subquestion: |
  I certify that...
   
   - I have completed an approved [LAR information session](https://www.mass.gov/doc/uniform-limited-assistance-representation-training-protocol/download) as required,
   - that I have signed a [written agreement with the Client](https://www.mass.gov/trial-court-rules/trial-court-rule-xvi-uniform-rule-on-limited-assistance-representation#1-limited-assistance-representation) to provide the limited representation in this matter, and 
   - that I have served this Notice of Limited Appearance on this Party, all counsel and all parties not represented by counsel.
fields:
  - no label: agrees_to_certify
    datatype: checkboxes
    minlength: 1
    choices:
      - Certify
    validation messages:
      minlength: |
        You cannot continue unless you check this box.
---
id: court question
question: |
  What court is this case being heard in?
subquestion: |
  The local court can be found by using the [Courthouse Locator](https://www.mass.gov/guides/find-a-courthouse-serving-you).
fields:
  - Court name: courts[0]
    datatype: object
    choices: macourts.filter_courts(allowed_courts)
continue button field: ask_court_question
---
id: docket numbers
question: |
  What is the docket number?
subquestion: |
  If your court paperwork has more than one docket number, list them all. Put a comma after each number.
  
  If you do not have enough space to list them all, that is OK.  
fields:
  - no label: docket_numbers
    input type: area
    minlength: 0
    maxlength: 75
    required: True
---
id: parties question
question: |
  Who are the parties in this case?
fields:
  - Name of Plaintiff/Petitoner: plaintiff_name
    required: True
  - Name of Defendant/Respondent: defendant_name
    required: True
---
id: interpreter question
generic object: Individual
question: |
  Does ${ clients[0] } need an interpreter?
subquestion: |
  ${ clients[0] } has the right to an interpreter. 
  
  If they are not 100% confident about speaking English, ask for an interpreter. 
  
  If there is a chance they may not understand everything that is said in English, or other people may not be able to understand them, ask for an interpreter.
  
  They do not have to speak only through the interpreter, but they may have one if they need one.
fields:
  - Is an interpreter required?: user_needs_interpreter
    datatype: yesnoradio
  - Preferred language: user_preferred_language 
    show if: user_needs_interpreter
---
id: representation question
question: |
  Which party are you representing?
fields: 
  - no label: represented_party
    input type: radio
    choices:
      - Plaintiff/Petitioner: Plaintiff
      - Defendant/Respondent: Defendant
---
code: |
  if represented_party == "Plaintiff":  
    clients[0].name.first = plaintiff_name 
  else: 
    clients[0].name.first = defendant_name
    
  clients[0].send_method = clients[0].sign_method
  clients[0].complete = True
  clients.gathered = True
---
code: |
  clients.there_is_another = False
  users.there_is_another = False
---
code: |
  clients.there_are_any = True
---
code: |  # Cosigner functionality needs this
  other_signers = clients
  all_signers = users + other_signers
---
id: events or issues
question: |
  What court events or issues are you representing your client in?
subquestion: |
  You and your Client have both signed a written agreement for you to represent your client on a limited basis in the following court events or discrete issues as described below (list event date where applicable).
fields:
  - Motion: need_motion
    datatype: yesno
    required: False
  - Details about motion: need_motion_details
    show if: need_motion
  - Date: need_motion_date
    datatype: date
    required: False
    show if: need_motion
  - Hearing: need_hearing
    datatype: yesno
    required: False  
  - Details about hearing: need_hearing_details
    show if: need_hearing
  - Date: need_hearing_date
    datatype: date
    required: False
    show if: need_hearing 
  - ADR: need_adr
    datatype: yesno
    required: False 
  - Details about ADR: need_adr_details
    show if: need_adr
  - Date: need_adr_date
    datatype: date
    required: False
    show if: need_adr 
  - Other Court Event: need_other_court_event
    datatype: yesno
    required: False   
  - Details about Other Court Event: need_other_court_event_details
    show if: need_other_court_event
  - Date: need_other_court_event_date
    datatype: date
    required: False
    show if: need_other_court_event  
  - Trial: need_trial
    datatype: yesno
    required: False
  - Details about trial: need_trial_details
    show if: need_trial
  - Date: need_trial_date
    datatype: date
    required: False
    show if: need_trial
  - Others (Must Specify): need_others
    datatype: yesno
    required: False
  - Details about others: need_others_details
    show if: need_others
  - Date: need_others_date
    datatype: date
    required: False
    show if: need_others
validation code: |
  if (not showifdef('need_motion') and \
      (not showifdef('need_hearing')) and \
      (not showifdef('need_adr')) and \
      (not showifdef('need_other_court_event')) and \
      (not showifdef('need_trial_details')) and \
      (not showifdef('need_others_details'))):
    validation_error(word("You need to state at least one event/issue."))
---
need: agrees_to_tos
question: All done
---
id: user address
question: |
  Your contact information
fields:
  - Firm or Agency Name (if applicable): firm_agency_name
    required: False
  - B.B.O. Number: bbo_number
  - Street Address: users[0].address.address
  - Apt/Unit Number: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: MA      
  - Zip: users[0].address.zip
---
id: user contact information
question: |
  Your contact information
subquestion: |
  The court needs to be able to reach you to schedule your hearing.
fields:  
  - Office or home phone number: users[0].phone_number
  - Mobile number: users[0].mobile_number
    required: False
  - Email address: users[0].email    
    datatype: email
  - Fax number: users[0].fax
    required: False
validation code: |
  if (not showifdef('users[0].home_number') and \
      (not showifdef('users[0].mobile_number')) and \
      (not showifdef('users[0].email'))): 
    validation_error(word("You need to provide at least one contact method."))     
---
id: preview screen
question: |
  Preview your form
subquestion: |
  This form requires both your and ${clients[0].name}'s signature. 
  
  You can download and print this form unsigned or continue to e-sign.
  
  ${ form_to_sign }
continue button field: preview_screen
---
#id: client availability
#question: |
#  Notice of Limited Appearance
#subquestion: |
#  This form requires both your and ${clients[0].name}'s signature.
#  
#  You can sign the form on your phone or computer and can send it to ${clients[0].name} to sign on their phone or computer. 
#  
#  If ${clients[0].name} is unable to sign the form now, you can e-sign, print, and have them sign later. 
#  
#  **Is your ${clients[0].name} ready to sign now?**
#yesno: client_can_sign_now
---
code: |
 form_to_sign = pdf_concatenate(preview_doc)
---
attachment:
  docx template file: notice_of_limited_appearance.docx
  variable name: preview_doc
---
code: |
  final_form = pdf_concatenate(notice_of_limited_appearance)
---
attachment: 
  docx template file: notice_of_limited_appearance.docx
  variable name: notice_of_limited_appearance
---
#id: attorney signature
#question: |
#  Your signature
#signature: users[0].signature
#under: |
#  ${users[0]}
#progress: 99
#---
id: date of attorney signature
question: |
 Signature date on form
fields:
  - no label: attorney_signature_date
    datatype: date
    default: ${today()}
---
# Customize to leave out default instructions for unwilling signers
template: unwilling_instructions
content: |
  
---
id: download final form
event: download
reconsider:
  - get_stored_data
  - collect_signer_types
  - unwilling_other_signers
  - all_signatures_in
question: |
  % if all_signatures_in:
  Your document is ready
  % else:
  ${ clients[0] } still needs to sign your document
  % endif
subquestion: |
  ${ other_signers_status_section }

  Look over the form below.
  
  1. If it looks correct, download or email it to yourself.
  2. You still need to deliver it to the ${courts[0]}. You may be able to get help with delivery if you call
  the court's emergency help line.
  Court's emergency help line:    
  833-91-COURT (833-912-6878)  
  Monday-Friday  
  8:30am - 4:30pm
  
  ${ final_form }
attachment code: notice_of_limited_appearance
---
# TODO past MVP: use `showifdef` for below
---
sets: set_empty_motion_details
scan for variables: False
code: |
  need_motion_details = ""
  need_motion_date = ""
  
  set_empty_motion_details = True
---
sets: set_empty_hearing_details
scan for variables: False
code: |
  need_hearing_details = ""
  need_hearing_date = ""
  
  set_empty_hearing_details = True
---
sets: set_empty_adr_details
scan for variables: False
code: |
  need_adr_details = ""
  need_adr_date = ""
  
  set_empty_adr_details = True
---
sets: set_empty_other_court_event_details
scan for variables: False
code: |
  need_other_court_event_details = ""
  need_other_court_event_date = ""
  
  set_empty_other_court_event_details = True
---
sets: set_empty_trial_details
scan for variables: False
code: |
  need_trial_details = ""
  need_trial_date = ""
  
  set_empty_trial_details = True
---
sets: set_empty_others_details
scan for variables: False
code: |
  need_others_details = ""
  need_others_date = ""
  
  set_empty_others_details = True